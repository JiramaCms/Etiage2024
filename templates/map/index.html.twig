{# templates/map.html.twig #}
{% extends 'base.html.twig' %}

{% block body %}
    <div class="container">
        <h1>My Leaflet Map</h1>
        {% for label, messages in app.flashes %}
            <div class="alert alert-{{ label }}">
                {% for message in messages %}
                    {{ message }}
                {% endfor %}
            </div>
        {% endfor %}
        <div id="mapid" style="height: 600px;"></div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="nameModal" tabindex="-1" aria-labelledby="nameModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="nameModalLabel">Enter Location Name</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="nameForm">
                        <div class="mb-3">
                            <label for="locationName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="locationName" required>
                        </div>
                        <input type="hidden" id="latitude" name="latitude">
                        <input type="hidden" id="longitude" name="longitude">
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveLocation">Save</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Initialiser la carte
        var mymap = L.map('mapid').setView([-18.917923, 47.522342], 7);

        // Ajouter une couche de tuiles (tiles layer)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(mymap);


        //code pour envoyer les coordonnées
        var lat;
        var lng;

        mymap.on('dblclick', function(e) {
            lat = e.latlng.lat;
            lng = e.latlng.lng;
            var nameModal = new bootstrap.Modal(document.getElementById('nameModal'), {});
            nameModal.show();
        });

        // Fonction pour envoyer les coordonnées et le nom au serveur
        document.getElementById('saveLocation').addEventListener('click', function() {
            var name = document.getElementById('locationName').value;
            if (name !== "") {
                sendCoordinates(lat, lng, name);
            }
        });

         // Fonction pour envoyer les coordonnées au serveur
        function sendCoordinates(lat, lng,name) {
            // Créer un formulaire et l'envoyer
            var form = document.createElement('form');
            form.method = 'POST';
            form.action = '{{ path('point_save') }}';

            var latitudeInput = document.createElement('input');
            latitudeInput.type = 'hidden';
            latitudeInput.name = 'latitude';
            latitudeInput.value = lat;
            form.appendChild(latitudeInput);

            var longitudeInput = document.createElement('input');
            longitudeInput.type = 'hidden';
            longitudeInput.name = 'longitude';
            longitudeInput.value = lng;
            form.appendChild(longitudeInput);

            var nameInput = document.createElement('input');
            nameInput.type = 'hidden';
            nameInput.name = 'nom';
            nameInput.value = name;
            form.appendChild(nameInput);

            document.body.appendChild(form);
            form.submit();
        }


         //Affichage
        

        var polygons = []; 
        {% for polygon in polygones %}
            var coordinates = JSON.parse('{{ polygon.coordinates|e('js') }}');
            var latlngs = coordinates.map(function(point) {
                return [point[0], point[1]];
            });

            var poly = L.polygon(latlngs).addTo(mymap).bindPopup('{{ polygon.name }}');
            polygons.push(poly);
        {% endfor %}

        // Ajouter les points et les différencier par leur couleur
        {% for point in pointsData %}

            {% set iconUrl %}
                {% if point.isInside %}
                    "/images/marker-green.svg"
                {% else %}
                    "/images/marker-blue.svg"
                {% endif %}
            {% endset %}

            var markerIcon = L.icon({
                iconUrl: {{ iconUrl }},
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34]
            });
            L.marker([{{ point.latitude }}, {{ point.longitude }}], { icon: markerIcon }).addTo(mymap).bindPopup("{{ point.name }}");
        {% endfor %}

        // Cacher le message flash après 5 secondes
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                alert.style.display = 'none';
            });
        }, 5000);

    </script>
{% endblock %}